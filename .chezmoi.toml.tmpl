{{- $chezmoi := .chezmoi }}{{- $users := dict -}}{{- $hosts := dict -}}


{{- /* === Customization ================================================ */ -}}

{{- $u := dict -}}
  {{- $_ := set $u "name" "Lukas Schmelzeisen" -}}
  {{- $_ := set $u "mail" "me@lschmelzeisen.com" -}}
  {{- $_ := set $u "gpg_key_file" "pgp-keys/lschmelzeisen.public.asc" -}}
  {{- $_ := set $u "gpg_key_fingerprint" "0D81170A7E23EB1005A8FD9D3EF8D67DB54A4043" -}}
  {{- $_ := set $u "gpg_key_id" "0x3EF8D67DB54A4043" -}}
{{- $_ = set $users "lschmelzeisen" $u -}}
{{- $_ = set $users "schmells" $u -}}

{{- $h := dict -}}
  {{- $_ := set $h "gpg_socket_dir" "/run/user/1000/gnupg/d.fj15x7xb73ergseatdpnwdt7" -}}
  {{- $_ := set $h "gpg_agent_forward_target" false -}}
  {{- $_ := set $h "docker" false -}}
  {{- $_ := set $h "podman" true -}}
  {{- $_ := set $h "elasticsearch" true -}}
  {{- $_ := set $h "flathub" true -}}
  {{- $_ := set $h "nvidia" true -}}
  {{- $_ := set $h "nvidia_power" true -}}
  {{- $_ := set $h "desktop" true -}}
  {{- $_ := set $h "barrier_host" "192.168.178.20" -}}
  {{- $_ := set $h "barrier_fingerprint" "DE:82:A3:44:00:D2:5D:AE:D3:A1:58:E9:22:A7:0A:CB:CB:7D:03:92" -}}
  {{- $_ := set $h "virt_manager" true -}}
  {{- $_ := set $h "jetbrains_toolbox" true -}}
  {{- $_ := set $h "msteams" true -}}
{{- $_ = set $hosts "razorback" $h -}}

{{- $h := dict -}}
  {{- $_ := set $h "gpg_socket_dir" "/run/user/1000/gnupg/d.fj15x7xb73ergseatdpnwdt7" -}}
  {{- $_ := set $h "gpg_agent_forward_target" true -}}
  {{- $_ := set $h "docker" false -}}
  {{- $_ := set $h "podman" true -}}
  {{- $_ := set $h "elasticsearch" true -}}
  {{- $_ := set $h "flathub" true -}}
  {{- $_ := set $h "nvidia" false -}}
  {{- $_ := set $h "desktop" true -}}
  {{- $_ := set $h "barrier_host" "" -}}
  {{- $_ := set $h "virt_manager" false -}}
  {{- $_ := set $h "jetbrains_toolbox" false -}}
  {{- $_ := set $h "msteams" false -}}
{{- $_ = set $hosts "razorback_fedora33" $h -}}

{{- $h:= dict -}}
  {{- $_ := set $h "gpg_socket_dir" "/run/user/1000/gnupg/d.fj15x7xb73ergseatdpnwdt7" -}}
  {{- $_ := set $h "gpg_agent_forward_target" true -}}
  {{- $_ := set $h "docker" false -}}
  {{- $_ := set $h "podman" true -}}
  {{- $_ := set $h "elasticsearch" true -}}
  {{- $_ := set $h "flathub" false -}}
  {{- $_ := set $h "nvidia" false -}}
  {{- $_ := set $h "desktop" false -}}
{{- $_ = set $hosts "razorback_fedora33server" $h -}}

{{- $h := dict -}}
  {{- $_ := set $h "gpg_socket_dir" "/run/user/1000/gnupg/d.fj15x7xb73ergseatdpnwdt7" -}}
  {{- $_ := set $h "gpg_agent_forward_target" true -}}
  {{- $_ := set $h "docker" false -}}
  {{- $_ := set $h "podman" true -}}
  {{- $_ := set $h "elasticsearch" true -}}
  {{- $_ := set $h "flathub" false -}}
  {{- $_ := set $h "nvidia" true -}}
  {{- $_ := set $h "nvidia_power" false -}}
  {{- $_ := set $h "desktop" false -}}
{{- $_ = set $hosts "nauvoo" $h -}}

{{- $h := dict -}}
  {{- $_ := set $h "gpg_socket_dir" "/run/user/1000/gnupg/d.9r8a7u8b4py83j85z3pbxmyh" -}}
  {{- $_ := set $h "gpg_agent_forward_target" true -}}
  {{- $_ := set $h "docker" false -}}
  {{- $_ := set $h "podman" true -}}
  {{- $_ := set $h "elasticsearch" true -}}
  {{- $_ := set $h "flathub" false -}}
  {{- $_ := set $h "nvidia" true -}}
  {{- $_ := set $h "nvidia_power" false -}}
  {{- $_ := set $h "desktop" false -}}
{{- $_ = set $hosts "arboghast" $h -}}

{{- /* === User ========================================================= */ -}}

{{- $userKeys := list "name" "mail" "gpg_key_file" "gpg_key_fingerprint" "gpg_key_id" -}}
{{- $user := dict -}}
{{- range $key := $userKeys -}}
  {{- with $u := get $users $chezmoi.username -}}
    {{- $_ := hasKey $u $key | ternary (get $u $key) nil | set $user $key -}}
  {{- else -}}
    {{- $_ := set $user $key nil -}}
  {{- end -}}
{{- end -}}

{{- if $user.name | kindIs "invalid" -}}
  {{- $_ := promptString "Full name" | set $user "name" -}}
{{- end -}}

{{- if $user.mail | kindIs "invalid" -}}
  {{- $_ := promptString "E-mail address" | set $user "mail" -}}
{{- end -}}


{{- /* === Host ========================================================= */ -}}

{{- $hostKeys := list "gpg_socket_dir" "gpg_agent_forward_target" "docker" "docker_zfs" "podman" "elasticsearch" "flathub" "nvidia" "nvidia_power" "desktop" "barrier_host" "barrier_fingerprint" "virt_manager" "jetbrains_toolbox" "msteams" }}
{{- $host := dict -}}
{{- range $key := $hostKeys -}}
  {{- with $h := get $hosts ($chezmoi.hostname | replace "-" "_") -}}
    {{- $_ := hasKey $h $key | ternary (get $h $key) nil | set $host $key -}}
  {{- else -}}
    {{- $_ := set $host $key nil -}}
  {{- end -}}
{{- end -}}

{{- if $host.gpg_socket_dir | kindIs "invalid" -}}
  {{- $_ := promptString "Path to GPG socket dir (output of `gpgconf --list-dirs socketdir`)" | set $host "gpg_socket_dir" -}}
{{- end -}}

{{- if $host.gpg_agent_forward_target | kindIs "invalid" -}}
  {{- $_ := promptBool "Will this machine be the target of gpg-agent-forwarding (y/n)" | set $host "gpg_agent_forward_target" -}}
{{- end -}}

{{- if $host.docker | kindIs "invalid" -}}
  {{- $_ := promptBool "Install docker (y/n)" | set $host "docker" -}}
{{- end -}}
{{- if $host.docker  -}}
  {{- if $host.docker_zfs | kindIs "invalid" -}}
    {{- $_ := promptBool "Will '/var/lib/docker' be mounted via ZFS (y/n)" | set $host "docker_zfs" -}}
  {{- end -}}
{{- else -}}
  {{- $_ := set $host "docker_zfs" false -}}
{{- end -}}

{{- if $host.podman | kindIs "invalid" -}}
  {{- $_ := promptBool "Install podman (y/n)" | set $host "podman" -}}
{{- end -}}

{{- if $host.elasticsearch | kindIs "invalid" -}}
  {{- $_ := promptBool "Prepare system for hosting Elasticsearch (y/n)" | set $host "elasticsearch" -}}
{{- end -}}

{{- if $host.flathub | kindIs "invalid" -}}
  {{- $_ := promptBool "Enable Flathub (y/n)" | set $host "flathub" -}}
{{- end -}}

{{- if $host.nvidia | kindIs "invalid" -}}
  {{- $_ := promptBool "Install NVIDIA drivers (y/n)" | set $host "nvidia" -}}
{{- end -}}
{{- if $host.nvidia -}}
  {{- if $host.nvidia_power | kindIs "invalid" -}}
    {{- $_ := promptBool "Set up fine-grained dynamic power control for NVIDIA, only supported Notebooks with Turing or newer GPUs (y/n)" | set $host "nvidia_power" -}}
  {{- end -}}
{{- else -}}
  {{- $_ := set $host "nvidia_power" false -}}
{{- end -}}

{{- if $host.desktop | kindIs "invalid" -}}
  {{- $_ := promptBool "Desktop machine (y/n)" | set $host "desktop" -}}
{{- end -}}

{{- if $host.desktop -}}
  {{- if $host.barrier_host | kindIs "invalid" -}}
    {{- $_ := promptString "Barrier host (leave blank to not install barrier)" | set $host "barrier_host" -}}
  {{- end -}}
  {{- if $host.barrier_fingerprint | kindIs "invalid" -}}
    {{- if $host.barrier_host -}}
      {{- $_ := promptString "Barrier host SSL fingerprint" | set $host "barrier_fingerprint" -}}
    {{- else -}}
      {{- $_ := set $host "barrier_fingerprint" "" -}}
    {{- end -}}
  {{- end -}}

  {{- if $host.virt_manager | kindIs "invalid" -}}
    {{- $_ := promptBool "Install virt-manager (y/n)" | set $host "virt-manager" -}}
  {{- end -}}

  {{- if $host.jetbrains_toolbox | kindIs "invalid" -}}
    {{- $_ := promptBool "Install JetBrains Toolsbox (y/n)" | set $host "jetbrains_toolsbox" -}}
  {{- end -}}

  {{- if $host.msteams | kindIs "invalid" -}}
    {{- $_ := promptBool "Install Microsoft Teams (y/n)" | set $host "msteams" -}}
  {{- end -}}

{{- else -}}
  {{- $_ := set $host "barrier_host" "" -}}
  {{- $_ := set $host "barrier_fingerprint" "" -}}

  {{- $_ := set $host "virt_manager" false -}}

  {{- $_ := set $host "jetbrains_toolbox" false -}}
  {{- $_ := set $host "msteams" false -}}
{{- end -}}


[data]
  [data.user]
  {{- range $key, $value := $user }}
    {{ $key }} = {{ printf "%#v" $value }}
  {{- end }}

  [data.users]
  {{- range $key, $value := $users }}
    [data.users.{{ $key }}]
    {{- range $key2, $value2 := $value }}
      {{ $key2 }} = {{ printf "%#v" $value2 }}
    {{- end }}
  {{- end }}

  [data.host]
  {{- range $key, $value := $host }}
    {{ $key }} = {{ printf "%#v" $value }}
  {{- end }}

  [data.hosts]
  {{- range $key, $value := $hosts }}
    [data.hosts.{{ $key }}]
    {{- range $key2, $value2 := $value }}
      {{ $key2 }} = {{ printf "%#v" $value2 }}
    {{- end }}
  {{- end }}
